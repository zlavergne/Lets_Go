Language Tools

* Popular Go Compilers

There are two primary compilers available, and both are written by the official Go developers:

- *gc*: The original and default compiler toolchain
- *gccgo*: A Go frontend for gcc

* Examples

Compiler and associated tools are generally invoked by calling `go <command>`

- *go*run* and *go*build*
- *go*test*
- Can output test coverage with *-coverprofile*
- Can test for race conditions with *-race*
- *go*get*: Package management

* Editor Tools

There is no official editor or IDE for Go. A list of common editors and the tools associated with them can be found on [[https://github.com/golang/go/wiki/IDEsAndTextEditorPlugins][Github]].

*Possible*IDE's:*

- Eclipse using [[https://goclipse.github.io/][GoClipse]]
- [[https://www.jetbrains.com/go/][GoLand]], Jetbrains' Go IDE
- Visual Studio

*Possible*text*editors:*
- Vim can use [[https://github.com/fatih/vim-go][vim-go]] for autocompletion and refactoring
- Atom can use [[https://github.com/joefitzgerald/go-plus][go-plus]]
- Visual Studio Code has [[https://github.com/Microsoft/vscode-go][vscode-go]] available

* Debugging 

*gdb*

- Some manual configuration is necessary if using *gc* and is generally not recommended
- *gccgo* has native support.

*delve*

- Compatible with most gdb commands
